"어노테이션" 기반 설정

 @ : 각종 설정을 코드위에 보여줌으로써
	설정을 위한 파일(==.xml) 분석부담을 줄여줌

=> 스프링 컨테이너 프레임워크 
	객체를 생성 및 관리
	각종 설정들이 많음->부담
	=> @ : 코드위에 설정을 보여줘서 코드를 보는 사람이 바로 설정을 파악할수있음!!!
	
.xml
@

1. Context 네임스페이스 추가
2. <bean> --->> @Component
	설정적용될 패키지범위를 작성
	== 컴포넌트 스캔 설정해야함
=> 스프링 컨테이너가 패키지범위를 스캔중,
	@Component가 추가된 클래스에서 객체 생성


"의존성 주입"
 @Autowired
	: 메서드(생성자), 멤버변수 바로 위에 작성
	특히 멤버변수위에 더 많이 사용됨
	"타입"을 체크함
 @Resource
	: name속성을 사용할수있는 @


.xml VS @

.xml 
 - 자바코드 변화xxx
 - 설정을 하나의 파일로 관리

@
 - 분석이 용이(자바코드에 설정이 담겨있음)

결론
 => .xml과 @을 병행하며 설정



뷰 작업
-> 템플릿
	css, js xxx
	${} JSTL 커스텀태그










