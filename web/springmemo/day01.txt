spring 
 - 사용 이유
 - 중요한 포인트

용어, 개념 -> 설정안내 -> 실습

설정들(.xml)을 편리하게 관리할 필요성이 생김!
-> spring 플러그인설치

Java Resources - src/main/resources 
 - log4j.xml 제외 모두삭제
src - main - webapp - WEB-INF
 - classes, web.xml 제외 모두 삭제

프레임워크
a~z ad~z :틀
===============================
ad~z : 틀

1. 구현시간이 빠름
2. 유지보수 용이
3. 개발자 역량 상향평준화
4. 재사용성이 용이

"IoC와 AOP를 지원하는 경량의 컨테이너 프레임워크"
 -IoC : 제어의 역행 == [낮은 결합도(결합도가 높으면 좋지않음)]
	자바 코드로 객체생성 및 관리를 제어
	서블릿은 어떻게 사용하고있었나?
	-> 서블릿 컨테이너(==톰캣)가 객체를 생성하고 메서드 수행
	일반 자바 객체들(==POJO)도 컨테이너가 관리하게할예정

 - AOP : 관점지향 프로그래밍 == [높은 응집도]
	DAO의 비즈니스메서드들
		C	R	U	D
	로깅	
	보안처리
	트랜잭션




 - .jsp에서 JAVA코드를 제거한것이 진짜V
   JAVA코드에서 new연산자를 제거한것이 spring을 사용한 개발











