
M 	DBCP & 트랜잭션
	데이터베이스 커넥션 풀

커넥션
 어플리케이션 - DB의 연결, 그러한 과정
 실무에서 관리해야하는 대상
  - 너무많은 동시접속자들은 서버에 많은 부담을 줌
  - 비용손실
 -> DB에 매번 접속시키는것이아니라, 웹서버 임시메모리에 데이터를 적재하여 사용
				== 프론트DB
	
	미리 일정수의 커넥션을 풀에 확보해놓고,
	확보된 커넥션을 가져와서 사용
	DBCP에서 커넥션을 확보하기위해 JNDI를 활용
		1. 웹어플리케이션이 시작되면 서버에서 일정수의 커넥션을 생성
		2. 어플리케이션에서 사용자요청에따라 커넥션을 전달=>JNDI(Java Naming and Directory Interface)
		3. 5개/10개 6번째 사용자요청 새로운 커넥션을 생성
		4. 커넥션들은 반납, 최소 커넥션을 유지
								"인터페이스" -> 규칙을 강제
								네이밍 서비스의 한 종류 ex)DNS
								톰캣 컨테이너: DataSource객체를 활용하여 JNDI 서비스를 제공
	톰캣 DataSource 설정
	 1. server.xml(톰캣 전반이 의존하는 설정파일) OR context.xml(어플리케이션과 관련된 설정파일)
	 2. 어플리케이션에서 설정한 JNDI서비스를 이용하기위한 설정이 필요함 : web.xml
	 => context.xml에서 설정한 jdbc/orcl DataSource를 활용한 JNDI객체를 참조하겠다
	 결과 : JNDI서비스를 위한 이름을 등록하면(jdbc/orcl) 그 이름을 통해 DataSource객체 확보가 가능하고 그를 통해 연결(커넥션)하여 sql문 실행함
※DBCP 실습코드 -> Myapplication에 활용하여 정상작동하는지확인하기



트랜잭션
 작업의 단위 
 게임아이템사야지~ 구매를 누름
 10000 9500원 추가결제 ? 예
 제통장에서 -9500
 + 아이템을 지급하기
	쇼핑몰 물건구매 주문테이블 / 회원테이블 / 택배테이블



test1.jsp
 입력폼
testController.jsp
 action=insert/selectAll
 입력이니?
 출력이니?
test2.jsp
 출력폼
<a href=""> 처음으로 돌아가기</a>

V -> java코드제거위해 JSTL
	datas 생성 => C에서 작업해야함!
	V에서 V로 바로이동xxx C를 통해서 이동함




